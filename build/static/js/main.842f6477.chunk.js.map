{"version":3,"sources":["reducer.js","socket.js","JoinBlock.jsx","Chat.jsx","App.js","index.js"],"names":["reducer","state","action","type","joined","userName","payload","roomId","users","messages","socket","io","JoinBlock","onLogin","React","useState","setRoomId","setUserName","isLoading","setLoading","onEnter","a","alert","obj","axios","post","className","TextField","label","variant","value","required","color","onChange","e","target","Button","disabled","onClick","size","Chat","onAddMessage","messageValue","setMessageValue","length","map","name","index","splice","sortMessages","message","text","onSubmit","preventDefault","emit","placeholder","App","useReducer","dispatch","get","data","setUsers","addMessage","useEffect","on","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.842f6477.chunk.js","sourcesContent":["const reducer =  (state, action) => {\r\n  switch (action.type) {\r\n    case 'JOINED':\r\n      return {\r\n        ...state,\r\n        joined: true,\r\n        userName: action.payload.userName,\r\n        roomId: action.payload.roomId,\r\n      };\r\n\r\n    case 'SET_USERS':\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n      };\r\n\r\n    case 'NEW_MESSAGE':\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, action.payload],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import io from \"socket.io-client\";\r\n\r\nconst socket = io();\r\n\r\nexport default socket;","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport socket from './socket';\r\nimport axios from 'axios';\r\nimport reducer from './reducer';\r\nexport default function JoinBlock({ onLogin }) {\r\n  const [roomId, setRoomId] = React.useState('1');\r\n  const [userName, setUserName] = React.useState('');\r\n  const [isLoading, setLoading] = React.useState(false);\r\n\r\n  const onEnter = async () => {\r\n    if (!userName && roomId) {\r\n      return alert('Enter your name');\r\n    } else if (!roomId && userName) {\r\n      return alert('Enter Room ID');\r\n    } else if (!userName && !roomId) {\r\n      return alert('Enter Room ID and Name');\r\n    }\r\n    const obj = {\r\n      roomId,\r\n      userName,\r\n    };\r\n    setLoading(true);\r\n    await axios.post('/rooms', obj);\r\n    await onLogin(obj);\r\n  };\r\n\r\n  return (\r\n    <div className=\"join-block\">\r\n      <TextField\r\n        className=\"input\"\r\n        label=\"Room\"\r\n        variant=\"filled\"\r\n        value={roomId}\r\n        required\r\n        color=\"secondary\"\r\n        onChange={(e) => setRoomId(e.target.value)}\r\n      />\r\n\r\n      <TextField\r\n        className=\"input\"\r\n        label=\"Name\"\r\n        variant=\"filled\"\r\n        value={userName}\r\n        required\r\n        color=\"secondary\"\r\n        onChange={(e) => setUserName(e.target.value)}\r\n      />\r\n      <Button\r\n        disabled={isLoading}\r\n        onClick={onEnter}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"medium\"\r\n      >\r\n        {isLoading ? 'Joining...' : 'Join Room'}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './chat.css';\r\nimport socket from './socket';\r\n\r\nfunction Chat({ users, messages, userName, roomId, onAddMessage }) {\r\n  const [messageValue, setMessageValue] = React.useState('');\r\n\r\n  const onSendMessage = () => {\r\n    socket.emit('roomNewMessage', {\r\n      roomId,\r\n      userName,\r\n      text: messageValue,\r\n    });\r\n    onAddMessage({\r\n      userName,\r\n      text: messageValue,\r\n    });\r\n    setMessageValue('');\r\n  };\r\n  const sortMessages = (messages) => {\r\n    if (messages.length > 7){\r\n      return messages.splice(0,1)\r\n    } else {\r\n      return messages\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"container\" >\r\n      <h1>Room {roomId}</h1>\r\n      <div className=\"chatbox\" >\r\n        <div className=\"chatbox__user-list\">\r\n          <h1>Online ({users.length}):</h1>\r\n          {users.map((name, index) => (\r\n            <div key={name + index} className=\"chatbox__user--active\">\r\n              <p>{name}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"chatbox__messages\">\r\n          {sortMessages(messages).map((message, index) => (\r\n            <div key={message + index} className=\"chatbox__messages__user-message\">\r\n              <div className=\"chatbox__messages__user-message--ind-message\">\r\n                <p className=\"name\">{message.userName}</p>\r\n                <br />\r\n                <p className=\"message\"><b>{message.text}</b></p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <form\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            onSendMessage();\r\n          }}\r\n        >\r\n          <input\r\n            value={messageValue}\r\n            onChange={(e) => setMessageValue(e.target.value)}\r\n            type=\"text\"\r\n            placeholder=\"Enter your message\"\r\n          />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport reducer from './reducer';\r\nimport JoinBlock from './JoinBlock.jsx';\r\nimport socket from './socket';\r\nimport Chat from './Chat.jsx';\r\n\r\nfunction App() {\r\n  const [state, dispatch] = React.useReducer(reducer, {\r\n    joined: false,\r\n    roomId: null,\r\n    userName: null,\r\n    users: [],\r\n    messages: [],\r\n  });\r\n\r\n  const onLogin = async (obj) => {\r\n    dispatch({\r\n      type: 'JOINED',\r\n      payload: obj,\r\n    });\r\n    socket.emit('roomJoin', obj);\r\n    const { data } = await axios.get(`/rooms/${obj.roomId}`);\r\n    setUsers(data.users);\r\n  };\r\n  const setUsers = (users) => {\r\n    dispatch({\r\n      type: 'SET_USERS',\r\n      payload: users,\r\n    });\r\n  };\r\n\r\n  const addMessage = (message) => {\r\n    dispatch({\r\n      type: 'NEW_MESSAGE',\r\n      payload: message\r\n    });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    socket.on('roomSetUsers', setUsers);\r\n    socket.on('roomNewMessage', addMessage);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"wrapper\">\r\n        {!state.joined ? <JoinBlock onLogin={onLogin} /> : <Chat {...state} onAddMessage= {addMessage}/>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}